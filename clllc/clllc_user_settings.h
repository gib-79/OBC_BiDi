//#############################################################################
//
// FILE:   clllc_user_settings.h
//
// TITLE:  clllc User Settings
//
//#############################################################################
// $TI Release: obc_7_4kw_ttplpfc_clllc v1.00.01.00 $
// $Release Date: Fri Dec 16 18:13:38 CST 2022 $
// $Copyright:
// Copyright (C) 2022 Texas Instruments Incorporated - http://www.ti.com/
//
// ALL RIGHTS RESERVED
// $
//#############################################################################

//
// BUILD_F28004X
// BUILD_F2838X
// BUILD_F28003X
//
#define  BUILD_F28003X

#ifndef PI_VALUE
#define PI_VALUE ((float32_t)3.141592653589)
#endif

#ifndef ONE_NANO_SEC
#define ONE_NANO_SEC ((float32_t)0.000000001)
#endif

#ifndef TWO_RAISED_TO_THE_POWER_SIXTEEN
#define TWO_RAISED_TO_THE_POWER_SIXTEEN ((float32_t)65536.0)
#endif

#ifndef TICKS_IN_PWM_FREQUENCY
#define TICKS_IN_PWM_FREQUENCY(m, n) (uint32_t)(n / (float32_t)m)
#endif

#ifndef TRUE
#define FALSE 0
#define TRUE  1
#endif

//
// Active synchronous rectification enable
//
#define CLLLC_ASR_ENABLE 1

//
//Transformer polarity setting
//0 = positive polarity, 1 = negative polarity
//
#define CLLLC_POSITIVE_POLARITY 0
#define CLLLC_NEGATIVE_POLARITY 1
#define CLLLC_TRANSFORMER_POLARITY CLLLC_NEGATIVE_POLARITY

//
// PWM pin, ADC, SDFM, Relay Selection related variables
//
#define CLLLC_ADC_BASE_SAMPLING_FREQUENCY_HZ       ((float)120*1000)
#define CLLLC_ADC_BASE_SAMPLING_PERIOD             ((CLLLC_PWMSYSCLOCK_FREQ_HZ) / (CLLLC_ADC_BASE_SAMPLING_FREQUENCY_HZ))
#define CLLLC_ADC_TIGGER_PWM1_BASE                 EPWM6_BASE
#define CLLLC_ADC_TIGGER_PWM2_BASE                 EPWM7_BASE

#define CLLLC_PRIM_LEG1_PWM_BASE                   EPWM1_BASE
#define CLLLC_PRIM_LEG1_PWM_NO                     1
#define CLLLC_PRIM_LEG1_PWM_H_GPIO                 0
#define CLLLC_PRIM_LEG1_PWM_H_GPIO_PIN_CONFIG      GPIO_0_EPWM1_A
#define CLLLC_PRIM_LEG1_PWM_H_DIS_GPIO_PIN_CONFIG  GPIO_0_GPIO0
#define CLLLC_PRIM_LEG1_PWM_L_GPIO                 1
#define CLLLC_PRIM_LEG1_PWM_L_GPIO_PIN_CONFIG      GPIO_1_EPWM1_B
#define CLLLC_PRIM_LEG1_PWM_L_DIS_GPIO_PIN_CONFIG  GPIO_1_GPIO1

#define CLLLC_PRIM_LEG2_PWM_BASE                   EPWM2_BASE
#define CLLLC_PRIM_LEG2_PWM_NO                     2
#define CLLLC_PRIM_LEG2_PWM_H_GPIO                 2
#define CLLLC_PRIM_LEG2_PWM_H_GPIO_PIN_CONFIG      GPIO_2_EPWM2_A
#define CLLLC_PRIM_LEG2_PWM_H_DIS_GPIO_PIN_CONFIG  GPIO_2_GPIO2
#define CLLLC_PRIM_LEG2_PWM_L_GPIO                 3
#define CLLLC_PRIM_LEG2_PWM_L_GPIO_PIN_CONFIG      GPIO_3_EPWM2_B
#define CLLLC_PRIM_LEG2_PWM_L_DIS_GPIO_PIN_CONFIG  GPIO_3_GPIO3

#define CLLLC_SEC_LEG1_PWM_BASE                   EPWM3_BASE
#define CLLLC_SEC_LEG1_PWM_NO                     3
#define CLLLC_SEC_LEG1_PWM_H_GPIO                 4
#define CLLLC_SEC_LEG1_PWM_H_GPIO_PIN_CONFIG      GPIO_4_EPWM3_A
#define CLLLC_SEC_LEG1_PWM_H_DIS_GPIO_PIN_CONFIG  GPIO_4_GPIO4
#define CLLLC_SEC_LEG1_PWM_L_GPIO                 5
#define CLLLC_SEC_LEG1_PWM_L_GPIO_PIN_CONFIG      GPIO_5_EPWM3_B
#define CLLLC_SEC_LEG1_PWM_L_DIS_GPIO_PIN_CONFIG  GPIO_5_GPIO5

#define CLLLC_SEC_LEG2_PWM_BASE                   EPWM4_BASE
#define CLLLC_SEC_LEG2_PWM_NO                     4
#define CLLLC_SEC_LEG2_PWM_H_GPIO                 6
#define CLLLC_SEC_LEG2_PWM_H_GPIO_PIN_CONFIG      GPIO_6_EPWM4_A
#define CLLLC_SEC_LEG2_PWM_H_DIS_GPIO_PIN_CONFIG  GPIO_6_GPIO6
#define CLLLC_SEC_LEG2_PWM_L_GPIO                 7
#define CLLLC_SEC_LEG2_PWM_L_GPIO_PIN_CONFIG      GPIO_7_EPWM4_B
#define CLLLC_SEC_LEG2_PWM_L_DIS_GPIO_PIN_CONFIG  GPIO_7_GPIO7

#define CLLLC_GLOBAL_LOAD_ENABLED FALSE

#define CLLLC_MAX_PERIOD_STEP_PU ((float32_t)0.05)

//
//ISR related
//
#define CLLLC_ISR1_PERIPHERAL_TRIG_BASE CLLLC_PRIM_LEG1_PWM_BASE
#define CLLLC_ISR1_TRIG INT_EPWM1
#define CLLLC_ISR1_PIE_GROUP INTERRUPT_ACK_GROUP3

#define CLLLC_ISR1_TRIG_CLA CLA_TRIGGER_EPWM1INT

#if CLLLC_ISR1_RUNNING_ON == CLA_CORE
#define CLLLC_ISR2_RUNNING_ON CLA_CORE
#else
#define CLLLC_ISR2_RUNNING_ON C28x_CORE
#endif

#define CLLLC_ISR2_ECAP_BASE ECAP1_BASE
#define CLLLC_ISR2_PWM_BASE EPWM5_BASE
#define CLLLC_ISR2_TRIG INT_ECAP1
#define CLLLC_ISR2_PIE_GROUP INTERRUPT_ACK_GROUP4

#define CLLLC_ISR2_TRIG_CLA CLA_TRIGGER_ECAP1INT

#define CLLLC_ISR3_TIMEBASE CLLLC_TASKC_CPUTIMER_BASE
#define CLLLC_ISR3_PERIPHERAL_TRIG_BASE ADCC_BASE
#define CLLLC_ISR3_TRIG INT_ADCC2
#define CLLLC_ISR3_PIE_GROUP INTERRUPT_ACK_GROUP10
//
// Compensator related
//
#define CLLLC_GI_OUT_MAX   ((float32_t)0.98)
#define CLLLC_GI_OUT_MIN   ((float32_t)-0.1)

#define CLLLC_GV_OUT_MAX   ((float32_t)0.98)
#define CLLLC_GV_OUT_MIN   ((float32_t)-0.1)

#define CLLLC_VOLTS_PER_SECOND_SLEW ((float32_t)10.0)
#define CLLLC_AMPS_PER_SECOND_SLEW ((float32_t)0.5)

//
//100pin control card
//

//
// 0 is disabled, 1 is enabled
//
#define CLLLC_OVERSAMPLING_ENABLED   1
#define CLLLC_VSEC_OVERSAMPLING_11x  1

//
// ADC triggers
//
#define CLLLC_ADC_SOC_TRIG1 ADC_TRIGGER_EPWM6_SOCA
#define CLLLC_ADC_SOC_TRIG2 ADC_TRIGGER_EPWM6_SOCB
#define CLLLC_ADC_SOC_TRIG3 ADC_TRIGGER_EPWM7_SOCA
#define CLLLC_ADC_SOC_TRIG4 ADC_TRIGGER_EPWM7_SOCB
#define CLLLC_ADC_SOC_TRIG5 ADC_TRIGGER_CPU1_TINT2

#define CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC1 ADC_TRIGGER_EPWM1_SOCA
#define CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC2 ADC_TRIGGER_EPWM1_SOCB

#define CLLLC_ADC_ACQPS_SYS_CLKS 30

//
// Signals mapped to ADC -A
//
#define CLLLC_ISEC_ADC_MODULE           ADCA_BASE
#define CLLLC_ISEC_ADC_PIN              ADC_CH_ADCIN5
#define CLLLC_ISEC_ADC_ACQPS_SYS_CLKS   CLLLC_ADC_ACQPS_SYS_CLKS
#define CLLLC_ISEC_ADCRESULTREGBASE     ADCARESULT_BASE

#define CLLLC_ISEC_ADC_TRIG_SOURCE_1    CLLLC_ADC_SOC_TRIG1
#define CLLLC_ISEC_ADC_TRIG_SOURCE_2    CLLLC_ADC_SOC_TRIG2
//#define CLLLC_ISEC_ADC_TRIG_SOURCE_3    CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC2
//#define CLLLC_ISEC_ADC_TRIG_SOURCE_4    CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC2

#define CLLLC_ISEC_ADC_SOC_NO_1         ADC_SOC_NUMBER2
#define CLLLC_ISEC_ADC_SOC_NO_2         ADC_SOC_NUMBER3
#define CLLLC_ISEC_ADC_SOC_NO_3         ADC_SOC_NUMBER4
#define CLLLC_ISEC_ADC_SOC_NO_4         ADC_SOC_NUMBER5
#define CLLLC_ISEC_ADC_SOC_NO_5         ADC_SOC_NUMBER6
#define CLLLC_ISEC_ADC_SOC_NO_6         ADC_SOC_NUMBER7
#define CLLLC_ISEC_ADC_SOC_NO_7         ADC_SOC_NUMBER8
#define CLLLC_ISEC_ADC_SOC_NO_8         ADC_SOC_NUMBER9
#define CLLLC_ISEC_ADC_SOC_NO_9         ADC_SOC_NUMBER10
#define CLLLC_ISEC_ADC_SOC_NO_10        ADC_SOC_NUMBER11
#define CLLLC_ISEC_ADC_SOC_NO_11        ADC_SOC_NUMBER12


#define CLLLC_ISEC_ADCREAD_1 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_1)
#define CLLLC_ISEC_ADCREAD_2 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_2)
#define CLLLC_ISEC_ADCREAD_3 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_3)
#define CLLLC_ISEC_ADCREAD_4 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_4)
#define CLLLC_ISEC_ADCREAD_5 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_5)
#define CLLLC_ISEC_ADCREAD_6 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_6)
#define CLLLC_ISEC_ADCREAD_7 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_7)
#define CLLLC_ISEC_ADCREAD_8 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_8)
#define CLLLC_ISEC_ADCREAD_9 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_9)
#define CLLLC_ISEC_ADCREAD_10 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_10)
#define CLLLC_ISEC_ADCREAD_11 ADC_readResult(CLLLC_ISEC_ADCRESULTREGBASE, CLLLC_ISEC_ADC_SOC_NO_11)


//
// Signals mapped to ADC -B
//
#define CLLLC_VPRIM_ADC_MODULE          ADCB_BASE
#define CLLLC_VPRIM_ADC_PIN             ADC_CH_ADCIN4
#define CLLLC_VPRIM_ADC_ACQPS_SYS_CLKS  CLLLC_ADC_ACQPS_SYS_CLKS
#define CLLLC_VPRIM_ADCRESULTREGBASE    ADCBRESULT_BASE

#define CLLLC_VPRIM_ADC_TRIG_SOURCE_1   CLLLC_ADC_SOC_TRIG1
#define CLLLC_VPRIM_ADC_TRIG_SOURCE_2   CLLLC_ADC_SOC_TRIG2
#define CLLLC_VPRIM_ADC_TRIG_SOURCE_3   CLLLC_ADC_SOC_TRIG3
#define CLLLC_VPRIM_ADC_TRIG_SOURCE_4   CLLLC_ADC_SOC_TRIG4

#define CLLLC_VPRIM_ADC_SOC_NO_1        ADC_SOC_NUMBER2
#define CLLLC_VPRIM_ADC_SOC_NO_2        ADC_SOC_NUMBER3
#define CLLLC_VPRIM_ADC_SOC_NO_3        ADC_SOC_NUMBER4
#define CLLLC_VPRIM_ADC_SOC_NO_4        ADC_SOC_NUMBER5

#define CLLLC_VPRIM_ADCREAD_1 ADC_readResult(CLLLC_VPRIM_ADCRESULTREGBASE, CLLLC_VPRIM_ADC_SOC_NO_1)
#define CLLLC_VPRIM_ADCREAD_2 ADC_readResult(CLLLC_VPRIM_ADCRESULTREGBASE, CLLLC_VPRIM_ADC_SOC_NO_2)
#define CLLLC_VPRIM_ADCREAD_3 ADC_readResult(CLLLC_VPRIM_ADCRESULTREGBASE, CLLLC_VPRIM_ADC_SOC_NO_3)
#define CLLLC_VPRIM_ADCREAD_4 ADC_readResult(CLLLC_VPRIM_ADCRESULTREGBASE, CLLLC_VPRIM_ADC_SOC_NO_4)

//
// Signals mapped to ADC -B
//
#define CLLLC_VSEC_ADC_MODULE           ADCC_BASE
#define CLLLC_VSEC_ADC_PIN              ADC_CH_ADCIN11
#define CLLLC_VSEC_ADC_ACQPS_SYS_CLKS   CLLLC_ADC_ACQPS_SYS_CLKS
#define CLLLC_VSEC_ADCRESULTREGBASE     ADCCRESULT_BASE

#define CLLLC_VSEC_ADC_TRIG_SOURCE_1    CLLLC_ADC_SOC_TRIG1
#define CLLLC_VSEC_ADC_TRIG_SOURCE_2    CLLLC_ADC_SOC_TRIG2
//#define CLLLC_VSEC_ADC_TRIG_SOURCE_3    CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC2
//#define CLLLC_VSEC_ADC_TRIG_SOURCE_4    CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC2

#define CLLLC_VSEC_ADC_SOC_NO_1         ADC_SOC_NUMBER2
#define CLLLC_VSEC_ADC_SOC_NO_2         ADC_SOC_NUMBER3
#define CLLLC_VSEC_ADC_SOC_NO_3         ADC_SOC_NUMBER4
#define CLLLC_VSEC_ADC_SOC_NO_4         ADC_SOC_NUMBER5
#define CLLLC_VSEC_ADC_SOC_NO_5         ADC_SOC_NUMBER6
#define CLLLC_VSEC_ADC_SOC_NO_6         ADC_SOC_NUMBER7
#define CLLLC_VSEC_ADC_SOC_NO_7         ADC_SOC_NUMBER8
#define CLLLC_VSEC_ADC_SOC_NO_8         ADC_SOC_NUMBER9
#define CLLLC_VSEC_ADC_SOC_NO_9        ADC_SOC_NUMBER10
#define CLLLC_VSEC_ADC_SOC_NO_10        ADC_SOC_NUMBER11
#define CLLLC_VSEC_ADC_SOC_NO_11        ADC_SOC_NUMBER12


#define CLLLC_VSEC_ADC_SOC_NO_13        ADC_SOC_NUMBER15

#define CLLLC_VSEC_ADCREAD_1  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_1)
#define CLLLC_VSEC_ADCREAD_2  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_2)
#define CLLLC_VSEC_ADCREAD_3  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_3)
#define CLLLC_VSEC_ADCREAD_4  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_4)
#define CLLLC_VSEC_ADCREAD_5  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_5)
#define CLLLC_VSEC_ADCREAD_6  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_6)
#define CLLLC_VSEC_ADCREAD_7  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_7)
#define CLLLC_VSEC_ADCREAD_8  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_8)
#define CLLLC_VSEC_ADCREAD_9  ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_9)
#define CLLLC_VSEC_ADCREAD_10 ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_10)
#define CLLLC_VSEC_ADCREAD_11 ADC_readResult(CLLLC_VSEC_ADCRESULTREGBASE, CLLLC_VSEC_ADC_SOC_NO_11)


//
// Signals mapped to ADC -A
//
#define CLLLC_IPRIM_ADC_MODULE          ADCA_BASE
#define CLLLC_IPRIM_ADC_PIN             ADC_CH_ADCIN9
#define CLLLC_IPRIM_ADC_ACQPS_SYS_CLKS  CLLLC_ADC_ACQPS_SYS_CLKS
#define CLLLC_IPRIM_ADCRESULTREGBASE    ADCARESULT_BASE
#define CLLLC_IPRIM_ADC_TRIG_SOURCE     CLLLC_ADC_SOC_TRIG_CLLLC_PWM_SYNC1
#define CLLLC_IPRIM_ADC_SOC_NO          ADC_SOC_NUMBER13
#define CLLLC_IPRIM_ADCREAD ADC_readResult(CLLLC_IPRIM_ADCRESULTREGBASE, CLLLC_IPRIM_ADC_SOC_NO)

//
// Macros for reading the ADCs
//
#define CLLLC_VPRIM_ADCREAD (CLLLC_VPRIM_ADCREAD_1)

#if CLLLC_OVERSAMPLING_ENABLED == 1
//
// 4x oversample
//
    // #define CLLLC_VPRIM_OVERSAMPLE_ADCREAD ((CLLLC_VPRIM_ADCREAD_1 + CLLLC_VPRIM_ADCREAD_2 + CLLLC_VPRIM_ADCREAD_3 + CLLLC_VPRIM_ADCREAD_4) * (0.25))

//
// 2x oversample
//
       #define CLLLC_VPRIM_OVERSAMPLE_ADCREAD ((CLLLC_VPRIM_ADCREAD_1 + CLLLC_VPRIM_ADCREAD_2 ) * (0.5f))
#endif

#define CLLLC_VSEC_ADCREAD (CLLLC_VSEC_ADCREAD_1)

#if CLLLC_OVERSAMPLING_ENABLED == 1
    #if CLLLC_VSEC_OVERSAMPLING_11x == 1
        #define CLLLC_VSEC_OVERSAMPLE_ADCREAD ((CLLLC_VSEC_ADCREAD_1 + CLLLC_VSEC_ADCREAD_2 + CLLLC_VSEC_ADCREAD_3 + CLLLC_VSEC_ADCREAD_4 + CLLLC_VSEC_ADCREAD_5 + CLLLC_VSEC_ADCREAD_6 + CLLLC_VSEC_ADCREAD_7 + CLLLC_VSEC_ADCREAD_8 + CLLLC_VSEC_ADCREAD_9 + CLLLC_VSEC_ADCREAD_10 + CLLLC_VSEC_ADCREAD_11 ) * (0.0909090))
    #else
//
// 4x oversample
//

//        #define CLLLC_VSEC_OVERSAMPLE_ADCREAD ((CLLLC_VSEC_ADCREAD_1 + CLLLC_VSEC_ADCREAD_2 + CLLLC_VSEC_ADCREAD_3 + CLLLC_VSEC_ADCREAD_4) * (0.25))

//
// 2x oversample
//
         #define CLLLC_VSEC_OVERSAMPLE_ADCREAD ((CLLLC_VSEC_ADCREAD_1 + CLLLC_VSEC_ADCREAD_2) * (0.5f))
    #endif
#endif

#define CLLLC_ISEC_ADCREAD (CLLLC_ISEC_ADCREAD_1)

#if CLLLC_OVERSAMPLING_ENABLED == 1
#if CLLLC_VSEC_OVERSAMPLING_11x == 1
    //
    // 12x oversample
    //
    #define CLLLC_ISEC_OVERSAMPLE_ADCREAD ((CLLLC_ISEC_ADCREAD_1 + CLLLC_ISEC_ADCREAD_2 + CLLLC_ISEC_ADCREAD_3 + CLLLC_ISEC_ADCREAD_4 + CLLLC_ISEC_ADCREAD_5 + CLLLC_ISEC_ADCREAD_6 + CLLLC_ISEC_ADCREAD_7 + CLLLC_ISEC_ADCREAD_8 + CLLLC_ISEC_ADCREAD_9 + CLLLC_ISEC_ADCREAD_10 + CLLLC_ISEC_ADCREAD_11 ) * (0.0909090))
#else
//
// 4x oversample
//
//    #define CLLLC_ISEC_OVERSAMPLE_ADCREAD ((CLLLC_ISEC_ADCREAD_1 + CLLLC_ISEC_ADCREAD_2 + CLLLC_ISEC_ADCREAD_3 + CLLLC_ISEC_ADCREAD_4) * (0.25))

//
// 2x oversample
//
    #define CLLLC_ISEC_OVERSAMPLE_ADCREAD ((CLLLC_ISEC_ADCREAD_1 + CLLLC_ISEC_ADCREAD_2) * (0.5f))
#endif
#endif

#if CLLLC_PROTECTION == CLLLC_PROTECTION_ENABLED
//
// set 1 to enable the appropriate protection scheme
//
#define CLLLC_BOARD_PROTECTION_IPRIM 0
#define CLLLC_BOARD_PROTECTION_ISEC 0
#define CLLLC_BOARD_PROTECTION_VSEC 0
#define CLLLC_BOARD_PROTECTION_GANFAULT 1
#else
//
// set 0 to disable the appropriate protection scheme
//
#define CLLLC_BOARD_PROTECTION_IPRIM 0
#define CLLLC_BOARD_PROTECTION_ISEC 0
#define CLLLC_BOARD_PROTECTION_VSEC 0
#define CLLLC_BOARD_PROTECTION_GANFAULT 0
#endif

#define CLLLC_IPRIM_CMPSS_BASE CMPSS2_BASE
#define CLLLC_IPRIM_CMPSS_XBAR_MUX XBAR_MUX02
#define CLLLC_IPRIM_CMPSS_XBAR_MUX_VAL XBAR_EPWM_MUX02_CMPSS2_CTRIPH_OR_L
#define CLLLC_IPRIM_CMPSS_ASYSCTRL_CMPHPMUX ASYSCTL_CMPHPMUX_SELECT_2
#define CLLLC_IPRIM_CMPSS_ASYSCTRL_CMPLPMUX ASYSCTL_CMPLPMUX_SELECT_2
#define CLLLC_IPRIM_CMPSS_ASYSCTRL_MUX_VALUE 2
#define CLLLC_IPRIM_CMPSS_XBAR_FLAG1 XBAR_INPUT_FLG_CMPSS2_CTRIPH
#define CLLLC_IPRIM_CMPSS_XBAR_FLAG2 XBAR_INPUT_FLG_CMPSS2_CTRIPL

#define CLLLC_ISEC_CMPSS_BASE CMPSS2_BASE
#define CLLLC_ISEC_XBAR_MUX XBAR_MUX02
#define CLLLC_ISEC_XBAR_MUX_VAL XBAR_EPWM_MUX02_CMPSS2_CTRIPH_OR_L
#define CLLLC_ISEC_CMPSS_ASYSCTRL_CMPHPMUX ASYSCTL_CMPHPMUX_SELECT_2
#define CLLLC_ISEC_CMPSS_ASYSCTRL_CMPLPMUX ASYSCTL_CMPLPMUX_SELECT_2
#define CLLLC_ISEC_CMPSS_ASYSCTRL_MUX_VALUE 5
#define CLLLC_ISEC_CMPSS_XBAR_FLAG1 XBAR_INPUT_FLG_CMPSS2_CTRIPH
#define CLLLC_ISEC_CMPSS_XBAR_FLAG2 XBAR_INPUT_FLG_CMPSS2_CTRIPL

#define CLLLC_VSEC_CMPSS_BASE CMPSS2_BASE
#define CLLLC_VSEC_CMPSS_XBAR_MUX XBAR_MUX02
#define CLLLC_VSEC_CMPSS_ASYSCTRL_CMPHPMUX ASYSCTL_CMPHPMUX_SELECT_2
#define CLLLC_VSEC_CMPSS_ASYSCTRL_CMPLPMUX ASYSCTL_CMPLPMUX_SELECT_2
#define CLLLC_VSEC_CMPSS_ASYSCTRL_MUX_VALUE 4
#define CLLLC_VSEC_CMPSS_XBAR_MUX_VAL XBAR_EPWM_MUX02_CMPSS2_CTRIPH
#define CLLLC_VSEC_CMPSS_XBAR_FLAG1 XBAR_INPUT_FLG_CMPSS2_CTRIPH


#define CLLLC_ISEC_TANK_CMPSS_BASE CMPSS4_BASE
#define CLLLC_ISEC_TANK_H_XBAR_MUX XBAR_MUX06
#define CLLLC_ISEC_TANK_CMPSS_ASYSCTRL_CMPHPMUX ASYSCTL_CMPHPMUX_SELECT_4
#define CLLLC_ISEC_TANK_CMPSS_ASYSCTRL_CMPLPMUX ASYSCTL_CMPLPMUX_SELECT_4
#define CLLLC_ISEC_TANK_CMPSS_ASYSCTRL_MUX_VALUE 2
#define CLLLC_ISEC_TANK_H_PWM_XBAR_MUX_VAL XBAR_EPWM_MUX06_CMPSS4_CTRIPH
#define CLLLC_ISEC_TANK_H_OUT_XBAR_MUX_VAL XBAR_OUT_MUX06_CMPSS4_CTRIPOUTH

#define CLLLC_ISEC_TANK_L_XBAR_MUX XBAR_MUX07
#define CLLLC_ISEC_TANK_L_PWM_XBAR_MUX_VAL XBAR_EPWM_MUX07_CMPSS4_CTRIPL
#define CLLLC_ISEC_TANK_L_OUT_XBAR_MUX_VAL XBAR_OUT_MUX07_CMPSS4_CTRIPOUTL

#define CLLLC_ISEC_TANK_H_CMPSS_XBAR_FLAG XBAR_INPUT_FLG_CMPSS4_CTRIPH
#define CLLLC_ISEC_TANK_L_CMPSS_XBAR_FLAG XBAR_INPUT_FLG_CMPSS4_CTRIPL

//
// Set DAC H to 2150 and L to 1950
// This is done by emperical tuning of the board for efficiency
//
#define CLLLC_ISEC_TANK_DACHVAL 2100
#define CLLLC_ISEC_TANK_DACLVAL 2000

//
// IPRIM TANK
//
#define CLLLC_IPRIM_TANK_CMPSS_BASE CMPSS2_BASE
#define CLLLC_IPRIM_TANK_CMPSS_XBAR_FLAG1 XBAR_INPUT_FLG_CMPSS2_CTRIPH
#define CLLLC_IPRIM_TANK_CMPSS_XBAR_FLAG2 XBAR_INPUT_FLG_CMPSS2_CTRIPL

#define CLLLC_IPRIM_TANK_H_XBAR_MUX XBAR_MUX02
#define CLLLC_IPRIM_TANK_H_PWM_XBAR_MUX_VAL XBAR_EPWM_MUX02_CMPSS2_CTRIPH
#define CLLLC_IPRIM_TANK_H_OUT_XBAR_MUX_VAL XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH

#define CLLLC_IPRIM_TANK_L_XBAR_MUX XBAR_MUX03
#define CLLLC_IPRIM_TANK_L_PWM_XBAR_MUX_VAL XBAR_EPWM_MUX03_CMPSS2_CTRIPL
#define CLLLC_IPRIM_TANK_L_OUT_XBAR_MUX_VAL XBAR_OUT_MUX03_CMPSS2_CTRIPOUTL



//
// Set DAC H to 2150 and L to 1950
// This is done by emperical tuning of the board for efficiency
//
#define CLLLC_IPRIM_TANK_DACHVAL 2150
#define CLLLC_IPRIM_TANK_DACLVAL 1950


//// Debug related
//// Active synchronous rectification debug, can only be used when Profiling is disabled.
////
//#define CLLLC_GPIO_XBAR1                      44
//#define CLLLC_GPIO_XBAR1_PIN_CONFIG           GPIO_44_OUTPUTXBAR7
//
//#define CLLLC_GPIO_XBAR2                      49
//#define CLLLC_GPIO_XBAR2_PIN_CONFIG           GPIO_49_OUTPUTXBAR4

//
// GPIO profiling
//

#define CLLLC_GPIO_PROFILING1 40
#define CLLLC_GPIO_PROFILING1_SET_REG GPIO_O_GPBSET
#define CLLLC_GPIO_PROFILING1_CLEAR_REG GPIO_O_GPBCLEAR
#define CLLLC_GPIO_PROFILING1_SET GPIO_GPBSET_GPIO40
#define CLLLC_GPIO_PROFILING1_CLEAR GPIO_GPBCLEAR_GPIO40
#define CLLLC_GPIO_PROFILING1_PIN_CONFIG GPIO_40_GPIO40

#define CLLLC_GPIO_PROFILING2 44
#define CLLLC_GPIO_PROFILING2_SET_REG GPIO_O_GPBSET
#define CLLLC_GPIO_PROFILING2_CLEAR_REG GPIO_O_GPBCLEAR
#define CLLLC_GPIO_PROFILING2_SET GPIO_GPBSET_GPIO44
#define CLLLC_GPIO_PROFILING2_CLEAR GPIO_GPBCLEAR_GPIO44
#define CLLLC_GPIO_PROFILING2_PIN_CONFIG GPIO_44_GPIO44

//
// Reuse FSI reserved pin for CLLLC_GPIO_PROFILING3 and CLLLC_GPIO_STEPCHANGEFREQ
//
#define CLLLC_GPIO_PROFILING3 49
#define CLLLC_GPIO_PROFILING3_SET_REG GPIO_O_GPBSET
#define CLLLC_GPIO_PROFILING3_CLEAR_REG GPIO_O_GPBCLEAR
#define CLLLC_GPIO_PROFILING3_SET GPIO_GPBSET_GPIO49
#define CLLLC_GPIO_PROFILING3_CLEAR GPIO_GPBCLEAR_GPIO49
#define CLLLC_GPIO_PROFILING3_PIN_CONFIG GPIO_49_GPIO49


#define CLLLC_GPIO_STEPCHANGEFREQ 50
#define CLLLC_GPIO_STEPCHANGEFREQ_SET_REG GPIO_O_GPBSET
#define CLLLC_GPIO_STEPCHANGEFREQ_CLEAR_REG GPIO_O_GPBCLEAR
#define CLLLC_GPIO_STEPCHANGEFREQ_SET GPIO_GPBSET_GPIO50
#define CLLLC_GPIO_STEPCHANGEFREQ_CLEAR GPIO_GPBCLEAR_GPIO50
#define CLLLC_GPIO_STEPCHANGEFREQ_PIN_CONFIG GPIO_50_GPIO50


//
// ECAP Temperature reading
//
#define CLLLC_TEMP_OVERSAMPLE 1024
#define CLLLC_TEMP_CHAN 12

#define CLLLC_GPIO_TEMP_MUX_OUT1 41
#define CLLLC_GPIO_TEMP_MUX_OUT1_PIN_CONFIG GPIO_41_GPIO41//todo check all TEMP reading GPIOs
#define CLLLC_TEMP_MUX_OUT1_ECAP_BASE  ECAP2_BASE
#define CLLLC_TEMP_MUX_OUT1_INPUTXBAR  XBAR_INPUT3
#define CLLLC_TEMP_MUX_OUT1_ECAP_INPUT ECAP_INPUT_INPUTXBAR3

#define CLLLC_GPIO_TEMP_MUX_OUT2 60
#define CLLLC_GPIO_TEMP_MUX_OUT2_PIN_CONFIG GPIO_60_GPIO60
#define CLLLC_TEMP_MUX_OUT2_ECAP_BASE  ECAP3_BASE
#define CLLLC_TEMP_MUX_OUT2_INPUTXBAR  XBAR_INPUT4
#define CLLLC_TEMP_MUX_OUT2_ECAP_INPUT ECAP_INPUT_INPUTXBAR4

#define CLLLC_GPIO_TEMP_MUX_SEL0 47
#define CLLLC_GPIO_TEMP_MUX_SEL0_PIN_CONFIG GPIO_47_GPIO47

#define CLLLC_GPIO_TEMP_MUX_SEL1 58
#define CLLLC_GPIO_TEMP_MUX_SEL1_PIN_CONFIG GPIO_58_GPIO58

#define CLLLC_GPIO_TEMP_MUX_SEL2 59
#define CLLLC_GPIO_TEMP_MUX_SEL2_PIN_CONFIG GPIO_59_GPIO59

//
// LED blink
//
#define CLLLC_GPIO_LED1 34
#define CLLLC_GPIO_LED1_SET GPIO_GPBSET_GPIO34
#define CLLLC_GPIO_LED1_CLEAR GPIO_GPBCLEAR_GPIO34
#define CLLLC_GPIO_LED1_PIN_CONFIG GPIO_34_GPIO34

//
// Commutation Inductor control
//
#define CLLLC_GPIO_LC 14
#define CLLLC_GPIO_LC_SET GPIO_GPASET_GPIO14
#define CLLLC_GPIO_LC_CLEAR GPIO_GPACLEAR_GPIO34
#define CLLLC_GPIO_LC_PIN_CONFIG GPIO_34_GPIO34

//
// GaN fault trip pin
//
#define CLLLC_GANFAULTn_GPIO 23
#define CLLLC_GANFAULTn_GPIO_PIN_CONFIG GPIO_23_GPIO23
#define CLLLC_GANFAULTn_XBAR_BASE INPUTXBAR_BASE
#define CLLLC_GANFAULTn_XBAR_INPUT XBAR_INPUT2
#define CLLLC_GANFAULTn_EPWM_FLAG EPWM_TZ_OST_FLAG_OST2

//
// CLLLC Secondary Sense Diagnostic Pin
//
#define CLLLC_GPIO_SECSENSEDIAG 30
#define CLLLC_GPIO_SECSENSEDIAG_PIN_CONFIG GPIO_30_GPIO30

//
// Add any system specific setting below
//
#define CLLLC_SFRA_FREQ_START 50
#define CLLLC_SFRA_FREQ_LENGTH 100
//
// SFRA step Multiply = 10^(1/No of steps per decade(40))
//
#define CLLLC_SFRA_FREQ_STEP_MULTIPLY (float32_t)1.06


//
// SFRA related
//
#define CLLLC_SFRA_GUI_SCI_BASE SCIA_BASE
#define CLLLC_SCI_VBUS_CLK 50000000
#define CLLLC_SFRA_GUI_SCI_BAUDRATE 57600

#define CLLLC_SFRA_GUI_SCIRX_GPIO 28
#define CLLLC_SFRA_GUI_SCITX_GPIO 29

#define CLLLC_SFRA_GUI_SCIRX_GPIO_PIN_CONFIG GPIO_28_SCIA_RX
#define CLLLC_SFRA_GUI_SCITX_GPIO_PIN_CONFIG GPIO_29_SCIA_TX

//
// if the following #define is set to 1 SFRA GUI indicates status on an LED
// otherwise LED code is ignored
//
#define CLLLC_SFRA_GUI_LED_INDICATOR 1
#define CLLLC_SFRA_GUI_LED_GPIO 31
#define CLLLC_SFRA_GUI_LED_GPIO_PIN_CONFIG GPIO_31_GPIO31

//
// ADC Related
//
#define CLLLC_ADC_PU_SCALE_FACTOR  ((float32_t)0.000244140625)
#define CLLLC_ADC_PU_PPB_SCALE_FACTOR ((float32_t)0.000488281250) //1/2^11

#define CLLLC_CMPSS_HYSTERESIS 2
#define CLLLC_CMPSSS_FILTER_PRESCALAR 2
#define CLLLC_CMPSS_WINODW 10
#define CLLLC_CMPSS_THRESHOLD 7

//
//CPU time related
//
#define CLLLC_TASKA_CPUTIMER_BASE CPUTIMER0_BASE
#define CLLLC_TASKB_CPUTIMER_BASE CPUTIMER1_BASE
#define CLLLC_TASKC_CPUTIMER_BASE CPUTIMER2_BASE

#define CLLLC_TASKA_FREQ_HZ 100
#define CLLLC_TASKB_FREQ_HZ 10
#define CLLLC_TASKC_FREQ_HZ CLLLC_ISR3_FREQUENCY_HZ

#define CLLLC_GET_TASKA_TIMER_OVERFLOW_STATUS CPUTimer_getTimerOverflowStatus(CLLLC_TASKA_CPUTIMER_BASE)
#define CLLLC_CLEAR_TASKA_TIMER_OVERFLOW_FLAG CPUTimer_clearOverflowFlag(CLLLC_TASKA_CPUTIMER_BASE)

#define CLLLC_GET_TASKB_TIMER_OVERFLOW_STATUS CPUTimer_getTimerOverflowStatus(CLLLC_TASKB_CPUTIMER_BASE)
#define CLLLC_CLEAR_TASKB_TIMER_OVERFLOW_FLAG CPUTimer_clearOverflowFlag(CLLLC_TASKB_CPUTIMER_BASE)

//
// Profiling related
//
#define CLLLC_PROFILING1_INPUTXBAR          XBAR_INPUT15
#define CLLLC_PROFILING2_INPUTXBAR          XBAR_INPUT16

#define CLLLC_PROFILING1_ECAP               ECAP2_BASE
#define CLLLC_PROFILING2_ECAP               ECAP3_BASE

#define CLLLC_PROFILING1_ECAP_XBAR_MUX      ECAP_INPUT_INPUTXBAR15
#define CLLLC_PROFILING2_ECAP_XBAR_MUX      ECAP_INPUT_INPUTXBAR16

#define CLLLC_DAC_BASE DACB_BASE


//
// Datalogger enable
//    0: disabled
//    1: enabled
//
#define CLLLC_DATALOGGER_ENABLE 0

#ifdef BUILD_F28003X
#if CLLLC_BOARD_PROTECTION_IPRIM == 1 ||  CLLLC_BOARD_PROTECTION_ISEC == 1 || CLLLC_BOARD_PROTECTION_VSEC == 1
    #warning CMPSS2 resource conflict with IPRIM_tank
#endif
#endif
//
// End of File
//
