//#############################################################################
//
// FILE:   pfc1ph3ilttpl_user_settings.h
//
// TITLE:  pfc1ph3ilttpl User Settings
//
//#############################################################################
// $TI Release: obc_7_4kw_ttplpfc_clllc v1.00.01.00 $
// $Release Date: Fri Dec 16 18:13:38 CST 2022 $
// $Copyright:
// Copyright (C) 2020 Texas Instruments Incorporated - http://www.ti.com/
//
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions 
// are met:
// 
//   Redistributions of source code must retain the above copyright 
//   notice, this list of conditions and the following disclaimer.
// 
//   Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the 
//   documentation and/or other materials provided with the   
//   distribution.
// 
//   Neither the name of Texas Instruments Incorporated nor the names of
//   its contributors may be used to endorse or promote products derived
//   from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// $
//#############################################################################

//
// BUILD_F28004X
// BUILD_F2838X
// BUILD_F28003X
//
#define  BUILD_F28003X

#define TTPLPFC_AEF_ENABLED 0

#if TTPLPFC_CONTROL_RUNNING_ON == CLA_CORE
#define TTPLPFC_INSTRUMENTATION_ISR_RUNNING_ON CLA_CORE
#else
#define TTPLPFC_INSTRUMENTATION_ISR_RUNNING_ON C28x_CORE
#endif

#define TTPLPFC_C28x_CONTROL_ISR_PIE_GROUP_NO INTERRUPT_ACK_GROUP3
#define TTPLPFC_C28x_CONTROL_ISR_TRIG_BASE EPWM5_BASE
#define TTPLPFC_C28x_CONTROL_ISR INT_EPWM5

#define TTPLPFC_CLA_CONTROLISR_TRIG  CLA_TRIGGER_EPWM5INT

#define TTPLPFC_INSTRUMENTATION_ISR_PIE_GROUP_NO INTERRUPT_ACK_GROUP10
#define TTPLPFC_INSTRUMENTATION_ISR_TRIG_BASE ADCA_BASE
#define TTPLPFC_INSTRUMENTATION_ISR INT_ADCA2

#define TTPLPFC_INSTRUMENTATION_ISR_FREQUENCY 10000
#define TTPLPFC_INSTRUMENTATION_ISR_TIME_BASE CPUTIMER2_BASE


#define TTPLPFC_GI_PI_MAX   ((float32_t)1.0)
#define TTPLPFC_GI_PI_MIN   ((float32_t)-1.0)

#define TTPLPFC_GV_PI_MAX   ((float32_t) 0.7)
#define TTPLPFC_GV_PI_MIN   ((float32_t) -0.02)

#define TTPLPFC_DUTY_MIN ((float32_t) 0.004)

#define TTPLPFC_NON_LINEAR_V_LOOP_KP_MULTIPLIER ((float32_t)5.0)

#define TTPLPFC_INPUT_CAP_COMPENSATION 1
#define TTPLPFC_HIGH_LINE_INPUT_CAP_COMP_ADJUST ((float32_t)-0.02)
#define TTPLPFC_LOW_LINE_INPUT_CAP_COMP_ADJUST  ((float32_t)-0.01)

//
// Dead time optimization
//

#define TTPLPFC_HF_FET_COSS  ((float32_t)0.000000000145)

//
// Set the minimum deadband as 20 ns
//
#define TTPLPFC_PFC_DEADBAND_RED_MIN_US ((float32_t)0.020)

//
// Set the maximum deadband as 200 ns
//
#define TTPLPFC_PFC_DEADBAND_RED_MAX_US ((float32_t)0.200)
#define TTPLPFC_I_INDIVIDUAL_MAX_SENSE         ((float32_t)12.6)
#define TTPLPFC_HIGH_FREQ_PWM_DEADBAND_RED_MAX_COUNT (int32_t)((float32_t)TTPLPFC_PFC_DEADBAND_RED_MAX_US * (float32_t)PWMSYSCLOCK_FREQ * (float32_t)0.000001)
#define TTPLPFC_HIGH_FREQ_PWM_DEADBAND_RED_MIN_COUNT (int32_t)((float32_t)TTPLPFC_PFC_DEADBAND_RED_MIN_US * (float32_t)PWMSYSCLOCK_FREQ * (float32_t)0.000001)
#define TTPLPFC_PHASE_SHEDDING_1PH_2PH_TRANSITION_CURRENT ((float32_t)5.0)
#define TTPLPFC_PHASE_SHEDDING_2PH_3PH_TRANSITION_CURRENT ((float32_t)9.6)
#define TTPLPFC_PHASE_SHEDDING_TRANSITION_CURRENT_HYSTERESIS ((float32_t)0.5)

//
// PWM pin, ADC, SDFM, Relay Selection related variables
//
#define TTPLPFC_LOW_FREQ_PWM_BASE                   EPWM5_BASE

#define TTPLPFC_LOW_FREQ_PWM_H_GPIO                 8
#define TTPLPFC_LOW_FREQ_PWM_H_GPIO_PIN_CONFIG      GPIO_8_EPWM5_A//GPIO_8_GPIO8


#define TTPLPFC_LOW_FREQ_PWM_L_GPIO                 9
#define TTPLPFC_LOW_FREQ_PWM_L_GPIO_PIN_CONFIG      GPIO_9_EPWM5_B//GPIO_9_GPIO9

#define TTPLPFC_HIGH_FREQ_PWM1_BASE                 EPWM6_BASE

#define TTPLPFC_HIGH_FREQ_PWM1_H_GPIO               10
#define TTPLPFC_HIGH_FREQ_PWM1_H_GPIO_PIN_CONFIG    GPIO_10_EPWM6_A
#define TTPLPFC_HIGH_FREQ_PWM1_H_PHASE_SHEDDING_GPIO_PIN_CONFIG      GPIO_10_GPIO10

#define TTPLPFC_HIGH_FREQ_PWM1_L_GPIO               11
#define TTPLPFC_HIGH_FREQ_PWM1_L_GPIO_PIN_CONFIG    GPIO_11_EPWM6_B
#define TTPLPFC_HIGH_FREQ_PWM1_L_PHASE_SHEDDING_GPIO_PIN_CONFIG      GPIO_11_GPIO11

#if TTPLPFC_TOTAL_NO_PHASES == 2 || TTPLPFC_TOTAL_NO_PHASES == 3
#define TTPLPFC_HIGH_FREQ_PWM2_BASE                 EPWM7_BASE

#define TTPLPFC_HIGH_FREQ_PWM2_H_GPIO               12
#define TTPLPFC_HIGH_FREQ_PWM2_H_GPIO_PIN_CONFIG    GPIO_12_EPWM7_A
#define TTPLPFC_HIGH_FREQ_PWM2_H_PHASE_SHEDDING_GPIO_PIN_CONFIG      GPIO_12_GPIO12

#define TTPLPFC_HIGH_FREQ_PWM2_L_GPIO               13
#define TTPLPFC_HIGH_FREQ_PWM2_L_GPIO_PIN_CONFIG    GPIO_13_EPWM7_B
#define TTPLPFC_HIGH_FREQ_PWM2_L_PHASE_SHEDDING_GPIO_PIN_CONFIG      GPIO_13_GPIO13
#endif

#if TTPLPFC_TOTAL_NO_PHASES == 3
#define TTPLPFC_HIGH_FREQ_PWM3_BASE                 EPWM8_BASE

#define TTPLPFC_HIGH_FREQ_PWM3_H_GPIO               14
#define TTPLPFC_HIGH_FREQ_PWM3_H_GPIO_PIN_CONFIG    GPIO_14_EPWM8_A
#define TTPLPFC_HIGH_FREQ_PWM3_H_PHASE_SHEDDING_GPIO_PIN_CONFIG      GPIO_14_GPIO14

#define TTPLPFC_HIGH_FREQ_PWM3_L_GPIO               15
#define TTPLPFC_HIGH_FREQ_PWM3_L_GPIO_PIN_CONFIG    GPIO_15_EPWM8_B
#define TTPLPFC_HIGH_FREQ_PWM3_L_PHASE_SHEDDING_GPIO_PIN_CONFIG      GPIO_15_GPIO15
#endif

#define TTPLPFC_PWM_SYNC_SOURCE EPWM_SYNC_IN_PULSE_SRC_SYNCOUT_EPWM5

#define TTPLPFC_ADC_ACQPS_SYS_CLOCKS 20
#define TTPLPFC_ADC_SOC_TRIG1 ADC_TRIGGER_EPWM6_SOCA
#define TTPLPFC_ADC_SOC_TRIG2 ADC_TRIGGER_EPWM6_SOCB
#define TTPLPFC_ADC_SOC_TRIG3 ADC_TRIGGER_EPWM7_SOCA
#define TTPLPFC_ADC_SOC_TRIG4 ADC_TRIGGER_EPWM7_SOCB
#define TTPLPFC_ADC_SOC_TRIG5 ADC_TRIGGER_CPU1_TINT2

//
// Signals mapped to ADC -A
//
#define TTPLPFC_IL1_ADC_MODULE  ADCA_BASE
#define TTPLPFC_IL1_ADC_SOC_NO  ADC_SOC_NUMBER0
#define TTPLPFC_IL1_ADC_PIN     ADC_CH_ADCIN2
#define TTPLPFC_IL1_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG1
#define TTPLPFC_IL1_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_IL1_ADCRESULTREGBASE ADCARESULT_BASE

#define TTPLPFC_IL1_ADC_SOC_NO_2  ADC_SOC_NUMBER1
#define TTPLPFC_IL1_ADC_TRIG_SOURCE_2 TTPLPFC_ADC_SOC_TRIG2

#define TTPLPFC_AC_L_ADC_MODULE  ADCA_BASE
#define TTPLPFC_AC_L_ADC_SOC_NO  ADC_SOC_NUMBER14
#define TTPLPFC_AC_L_ADC_PIN     ADC_CH_ADCIN4
#define TTPLPFC_AC_L_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG5
#define TTPLPFC_AC_L_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_AC_L_ADCRESULTREGBASE ADCARESULT_BASE

#define TTPLPFC_SYSTEM_TEMP_ADC_MODULE  ADCA_BASE
#define TTPLPFC_SYSTEM_TEMP_ADC_SOC_NO  ADC_SOC_NUMBER15
#define TTPLPFC_SYSTEM_TEMP_ADC_PIN     ADC_CH_ADCIN11
#define TTPLPFC_SYSTEM_TEMP_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG5
#define TTPLPFC_SYSTEM_TEMP_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_SYSTEM_TEMP_ADCRESULTREGBASE ADCARESULT_BASE



//
// Signals mapped to ADC -B
//
#define TTPLPFC_IL2_ADC_MODULE  ADCB_BASE
#define TTPLPFC_IL2_ADC_SOC_NO  ADC_SOC_NUMBER0
#define TTPLPFC_IL2_ADC_PIN     ADC_CH_ADCIN12
#define TTPLPFC_IL2_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG1
#define TTPLPFC_IL2_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_IL2_ADCRESULTREGBASE ADCBRESULT_BASE

#define TTPLPFC_IL2_ADC_SOC_NO_2  ADC_SOC_NUMBER1
#define TTPLPFC_IL2_ADC_TRIG_SOURCE_2 TTPLPFC_ADC_SOC_TRIG2

#define TTPLPFC_VBUS_ADC_MODULE  ADCB_BASE
#define TTPLPFC_VBUS_ADC_SOC_NO  ADC_SOC_NUMBER2
#define TTPLPFC_VBUS_ADC_PIN     ADC_CH_ADCIN4
#define TTPLPFC_VBUS_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG1
#define TTPLPFC_VBUS_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_VBUS_ADCRESULTREGBASE ADCBRESULT_BASE

#define TTPLPFC_VBUS_ADC_SOC_NO_2  ADC_SOC_NUMBER3
#define TTPLPFC_VBUS_ADC_TRIG_SOURCE_2 TTPLPFC_ADC_SOC_TRIG2

#define TTPLPFC_VBUS_ADC_SOC_NO_3  ADC_SOC_NUMBER4
#define TTPLPFC_VBUS_ADC_TRIG_SOURCE_3 TTPLPFC_ADC_SOC_TRIG3

#define TTPLPFC_VBUS_ADC_SOC_NO_4  ADC_SOC_NUMBER5
#define TTPLPFC_VBUS_ADC_TRIG_SOURCE_4 TTPLPFC_ADC_SOC_TRIG4

#define TTPLPFC_AC_N_ADC_MODULE  ADCB_BASE
#define TTPLPFC_AC_N_ADC_SOC_NO  ADC_SOC_NUMBER10
#define TTPLPFC_AC_N_ADC_PIN     ADC_CH_ADCIN2
#define TTPLPFC_AC_N_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG5
#define TTPLPFC_AC_N_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_AC_N_ADCRESULTREGBASE ADCBRESULT_BASE

#define TTPLPFC_SYSTEM_VREF_165_ADC_MODULE  ADCB_BASE
#define TTPLPFC_SYSTEM_VREF_165_ADC_SOC_NO  ADC_SOC_NUMBER11
#define TTPLPFC_SYSTEM_VREF_165_ADC_PIN     ADC_CH_ADCIN5
#define TTPLPFC_SYSTEM_VREF_165_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG5
#define TTPLPFC_SYSTEM_VREF_165_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_SYSTEM_VREF_165_ADCRESULTREGBASE ADCBRESULT_BASE

//
// Signals mapped to ADC -C
//
#define TTPLPFC_VAC_ADC_MODULE  ADCC_BASE
#define TTPLPFC_VAC_ADC_SOC_NO  ADC_SOC_NUMBER0
#define TTPLPFC_VAC_ADC_PIN     ADC_CH_ADCIN7
#define TTPLPFC_VAC_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG1
#define TTPLPFC_VAC_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_VAC_ADCRESULTREGBASE ADCCRESULT_BASE

#define TTPLPFC_VAC_ADC_SOC_NO_2  ADC_SOC_NUMBER1
#define TTPLPFC_VAC_ADC_TRIG_SOURCE_2 TTPLPFC_ADC_SOC_TRIG2

#define TTPLPFC_VBUS2_ADC_MODULE  ADCC_BASE
#define TTPLPFC_VBUS2_ADC_SOC_NO  ADC_SOC_NUMBER14
#define TTPLPFC_VBUS2_ADC_PIN     ADC_CH_ADCIN10
#define TTPLPFC_VBUS2_ADC_TRIG_SOURCE TTPLPFC_ADC_SOC_TRIG5
#define TTPLPFC_VBUS2_ADC_ACQPS_SYS_CLKS TTPLPFC_ADC_ACQPS_SYS_CLOCKS
#define TTPLPFC_VBUS2_ADCRESULTREGBASE ADCCRESULT_BASE

#define TTPLPFC_FAULTn_GPIO 22
#define TTPLPFC_FAULTn_PIN_CONFIG GPIO_22_GPIO22
#define TTPLPFC_FAULTn_XBAR_INPUT XBAR_INPUT1
#define TTPLPFC_FAULTn_XBAR_MUX XBAR_MUX01
#define TTPLPFC_FAULTn_XBAR_MUX_VAL XBAR_EPWM_MUX01_INPUTXBAR1
#define TTPLPFC_FAULTn_XBAR_FLAG XBAR_INPUT_FLG_INPUT1

//
// The below enables over current protection
// set to zero when testing with control card for SW check
// set to 1 when running on power stage
//

#define TTPLPFC_IL1_PROTECTION_CMPSS_BASE               CMPSS1_BASE
#define TTPLPFC_IL1_PROTECTION_CMPSS_XBAR_MUX           XBAR_MUX00
#define TTPLPFC_IL1_PROTECTION_CMPSS_XBAR_MUX_VAL       XBAR_EPWM_MUX00_CMPSS1_CTRIPH_OR_L
#define TTPLPFC_IL1_PROTECTION_CMPSS_ASYSCTRL_CMPHPMUX ASYSCTL_CMPHPMUX_SELECT_1
#define TTPLPFC_IL1_PROTECTION_CMPSS_ASYSCTRL_CMPLPMUX ASYSCTL_CMPLPMUX_SELECT_1
#define TTPLPFC_IL1_PROTECTION_CMPSS_ASYSCTRL_MUX_VALUE 0
#define TTPLPFC_IL1_PROTECTION_XBAR_FLAG1 XBAR_INPUT_FLG_CMPSS1_CTRIPH
#define TTPLPFC_IL1_PROTECTION_XBAR_FLAG2 XBAR_INPUT_FLG_CMPSS1_CTRIPL

#define TTPLPFC_IL2_PROTECTION_CMPSS_BASE               CMPSS3_BASE
#define TTPLPFC_IL2_PROTECTION_CMPSS_XBAR_MUX           XBAR_MUX04
#define TTPLPFC_IL2_PROTECTION_CMPSS_XBAR_MUX_VAL       XBAR_EPWM_MUX04_CMPSS3_CTRIPH_OR_L
#define TTPLPFC_IL2_PROTECTION_CMPSS_ASYSCTRL_CMPHPMUX ASYSCTL_CMPHPMUX_SELECT_3
#define TTPLPFC_IL2_PROTECTION_CMPSS_ASYSCTRL_CMPLPMUX ASYSCTL_CMPLPMUX_SELECT_3
#define TTPLPFC_IL2_PROTECTION_CMPSS_ASYSCTRL_MUX_VALUE 1
#define TTPLPFC_IL2_PROTECTION_XBAR_FLAG1 XBAR_INPUT_FLG_CMPSS3_CTRIPH
#define TTPLPFC_IL2_PROTECTION_XBAR_FLAG2 XBAR_INPUT_FLG_CMPSS3_CTRIPL

//
// The faults are lumped together as TRIP8 for the PWM
//
#define TTPLPFC_PWMXBAR_TRIP_NO XBAR_TRIP8

//
// Define for the EPWM module to select TRIP8 as the source for the trip
//
#define TTPLPFC_DC_TRIP_SELECT EPWM_DC_TRIP_TRIPIN8

#define TTPLPFC_GPIO_RELAY 15
#define TTPLPFC_GPIO_RELAY_SET GPIO_GPASET_GPIO15
#define TTPLPFC_GPIO_RELAY_CLEAR GPIO_GPACLEAR_GPIO15
#define TTPLPFC_GPIO_RELAY_PIN_CONFIG GPIO_15_GPIO15

#define TTPLPFC_GPIO_PROFILING1 40
#define TTPLPFC_GPIO_PROFILING1_SET_REG GPIO_O_GPBSET
#define TTPLPFC_GPIO_PROFILING1_SET GPIO_GPBSET_GPIO40
#define TTPLPFC_GPIO_PROFILING1_CLEAR_REG GPIO_O_GPBCLEAR
#define TTPLPFC_GPIO_PROFILING1_CLEAR GPIO_GPBCLEAR_GPIO40
#define TTPLPFC_GPIO_PROFILING1_PIN_CONFIG GPIO_40_GPIO40

#define TTPLPFC_GPIO_PROFILING2 45
#define TTPLPFC_GPIO_PROFILING2_SET_REG GPIO_O_GPBSET
#define TTPLPFC_GPIO_PROFILING2_SET GPIO_GPBSET_GPIO45
#define TTPLPFC_GPIO_PROFILING2_CLEAR_REG GPIO_O_GPBCLEAR
#define TTPLPFC_GPIO_PROFILING2_CLEAR GPIO_GPBCLEAR_GPIO45
#define TTPLPFC_GPIO_PROFILING2_PIN_CONFIG GPIO_45_GPIO45


//
// eCAP Profiling
//
#define TTPLPFC_PROFILING1_INPUTXBAR          XBAR_INPUT15
#define TTPLPFC_PROFILING2_INPUTXBAR          XBAR_INPUT16

#define TTPLPFC_PROFILING1_ECAP               ECAP2_BASE
#define TTPLPFC_PROFILING2_ECAP               ECAP3_BASE

#define TTPLPFC_PROFILING1_ECAP_XBAR_MUX      ECAP_INPUT_INPUTXBAR15
#define TTPLPFC_PROFILING2_ECAP_XBAR_MUX      ECAP_INPUT_INPUTXBAR16


#define TTPLPFC_GPIO_LED1 31
#define TTPLPFC_GPIO_LED1_SET GPIO_GPASET_GPIO31
#define TTPLPFC_GPIO_LED1_CLEAR GPIO_GPACLEAR_GPIO31
#define TTPLPFC_GPIO_LED1_PIN_CONFIG GPIO_31_GPIO31

#define TTPLPFC_GPIO_LED2 34
#define TTPLPFC_GPIO_LED2_SET GPIO_GPASET_GPIO34
#define TTPLPFC_GPIO_LED2_CLEAR GPIO_GPACLEAR_GPIO34
#define TTPLPFC_GPIO_LED2_PIN_CONFIG GPIO_34_GPIO34

//
// SFRA related
//
#define TTPLPFC_SFRA_GUI_SCI_BASE SCIA_BASE
#define TTPLPFC_SCI_VBUS_CLK 30000000
#define TTPLPFC_SFRA_GUI_SCI_BAUDRATE 57600
#define TTPLPFC_SFRA_GUI_SCIRX_GPIO 28
#define TTPLPFC_SFRA_GUI_SCITX_GPIO 29
#define TTPLPFC_SFRA_GUI_SCIRX_GPIO_PIN_CONFIG GPIO_28_SCIA_RX
#define TTPLPFC_SFRA_GUI_SCITX_GPIO_PIN_CONFIG GPIO_29_SCIA_TX
#define TTPLPFC_SFRA_GUI_PLOT_OL_PLANT 1

//
// if the following #define is set to 1 SFRA GUI indicates status on LED
// otherwise LED code is ignored
//
#define TTPLPFC_SFRA_GUI_LED_INDICATOR 1
#define TTPLPFC_SFRA_GUI_LED_GPIO 34
#define TTPLPFC_SFRA_GUI_LED_GPIO_PIN_CONFIG GPIO_34_GPIO34

#define TTPLPFC_IL1_FB      ADC_readResult(TTPLPFC_IL1_ADCRESULTREGBASE, TTPLPFC_IL1_ADC_SOC_NO)
#define TTPLPFC_IL1_FB_2    ADC_readResult(TTPLPFC_IL1_ADCRESULTREGBASE, TTPLPFC_IL1_ADC_SOC_NO_2)

#define TTPLPFC_IL2_FB      ADC_readResult(TTPLPFC_IL2_ADCRESULTREGBASE, TTPLPFC_IL2_ADC_SOC_NO)
#define TTPLPFC_IL2_FB_2    ADC_readResult(TTPLPFC_IL2_ADCRESULTREGBASE, TTPLPFC_IL2_ADC_SOC_NO_2)

#define TTPLPFC_VAC_FB      ADC_readResult(TTPLPFC_VAC_ADCRESULTREGBASE, TTPLPFC_VAC_ADC_SOC_NO)
#define TTPLPFC_VAC_FB_2    ADC_readResult(TTPLPFC_VAC_ADCRESULTREGBASE, TTPLPFC_VAC_ADC_SOC_NO_2)

#define TTPLPFC_VBUS_FB     ADC_readResult(TTPLPFC_VBUS_ADCRESULTREGBASE, TTPLPFC_VBUS_ADC_SOC_NO)
#define TTPLPFC_VBUS_FB_2   ADC_readResult(TTPLPFC_VBUS_ADCRESULTREGBASE, TTPLPFC_VBUS_ADC_SOC_NO_2)

#define TTPLPFC_AC_L_FB     ADC_readResult(TTPLPFC_AC_L_ADCRESULTREGBASE, TTPLPFC_AC_L_ADC_SOC_NO)

#define TTPLPFC_AC_N_FB     ADC_readResult(TTPLPFC_AC_N_ADCRESULTREGBASE, TTPLPFC_AC_N_ADC_SOC_NO)

#define TTPLPFC_SYSTEM_TEMP_FB     ADC_readResult(TTPLPFC_SYSTEM_TEMP_ADCRESULTREGBASE, TTPLPFC_SYSTEM_TEMP_ADC_SOC_NO)
#define TTPLPFC_SYSTEM_VREF_165_FB     ADC_readResult(TTPLPFC_SYSTEM_VREF_165_ADCRESULTREGBASE, TTPLPFC_SYSTEM_VREF_165_ADC_SOC_NO)
#define TTPLPFC_VBUS2_FB     ADC_readResult(TTPLPFC_VBUS2_ADCRESULTREGBASE, TTPLPFC_VBUS2_ADC_SOC_NO)

#define TTPLPFC_PWM_TRIP_STATUS EPWM_getTripZoneFlagStatus

#define TTPLPFC_ADC_PU_SCALE_FACTOR  (float32_t)(0.000244140625)
#define TTPLPFC_ADC_PU_PPB_SCALE_FACTOR 0.000488281250

#define TTPLPFC_GET_TASK_A_TIMER_OVERFLOW_STATUS CPUTimer_getTimerOverflowStatus(CPUTIMER0_BASE)
#define TTPLPFC_CLEAR_TASK_A_TIMER_OVERFLOW_FLAG CPUTimer_clearOverflowFlag(CPUTIMER0_BASE)

#define TTPLPFC_GET_TASK_B_TIMER_OVERFLOW_STATUS CPUTimer_getTimerOverflowStatus(CPUTIMER1_BASE)
#define TTPLPFC_CLEAR_TASK_B_TIMER_OVERFLOW_FLAG CPUTimer_clearOverflowFlag(CPUTIMER1_BASE)

#define TTPLPFC_TASKA_FREQ_HZ 100
#define TTPLPFC_TASKB_FREQ_HZ 10


#define TTPLPFC_HAL_AQ_SW_FORCE_PWMxA_HIGH_PWMxB_LOW(m) HWREGH(m + EPWM_O_AQCSFRC) = 0x06;
#define TTPLPFC_HAL_AQ_SW_FORCE_PWMxA_LOW_PWMxB_HIGH(m) HWREGH(m + EPWM_O_AQCSFRC) = 0x09;
#define TTPLPFC_HAL_AQ_SW_FORCE_PWMxA_LOW_PWMxB_LOW(m)  HWREGH(m + EPWM_O_AQCSFRC) = 0x05;
#define TTPLPFC_HAL_SET_PWM_DBRED(m, n)                  HWREGH(m + EPWM_O_DBRED ) = n;
#define TTPLPFC_HAL_SET_PWM_DBFED(m, n)                  HWREGH(m + EPWM_O_DBFED ) = n;

#define TTPLPFC_HAL_ENABLE_SWAP_DEADBAND_OUTPUT(m)      HWREGH(m + EPWM_O_DBCTL) = (HWREGH(m + EPWM_O_DBCTL) | 0x3000);
#define TTPLPFC_HAL_DISABLE_SWAP_DEADBAND_OUTPUT(m)     HWREGH(m + EPWM_O_DBCTL) = (HWREGH(m + EPWM_O_DBCTL) & ~0x3000);

#define TTPLPFC_IL1_OFFSET_PU ((float32_t)0.4945)
#define TTPLPFC_IL2_OFFSET_PU ((float32_t)0.5074)
#define TTPLPFC_VAC_OFFSET_PU ((float32_t)0.5008)

//
// ECAP Temperature reading
//
#define TTPLPFC_TEMP_OVERSAMPLE 1000
#define TTPLPFC_TEMP_CHAN 12

#define TTPLPFC_GPIO_TEMP_MUX_OUT1 41
#define TTPLPFC_GPIO_TEMP_MUX_OUT1_PIN_CONFIG GPIO_41_GPIO41
#define TTPLPFC_TEMP_MUX_OUT1_ECAP_BASE  ECAP2_BASE
#define TTPLPFC_TEMP_MUX_OUT1_INPUTXBAR  XBAR_INPUT3
#define TTPLPFC_TEMP_MUX_OUT1_ECAP_INPUT ECAP_INPUT_INPUTXBAR3

#define TTPLPFC_GPIO_TEMP_MUX_OUT2 60
#define TTPLPFC_GPIO_TEMP_MUX_OUT2_PIN_CONFIG GPIO_60_GPIO60
#define TTPLPFC_TEMP_MUX_OUT2_ECAP_BASE  ECAP3_BASE
#define TTPLPFC_TEMP_MUX_OUT2_INPUTXBAR  XBAR_INPUT4
#define TTPLPFC_TEMP_MUX_OUT2_ECAP_INPUT ECAP_INPUT_INPUTXBAR4

#define TTPLPFC_GPIO_TEMP_MUX_SEL0 47
#define TTPLPFC_GPIO_TEMP_MUX_SEL0_PIN_CONFIG GPIO_47_GPIO47

#define TTPLPFC_GPIO_TEMP_MUX_SEL1 58
#define TTPLPFC_GPIO_TEMP_MUX_SEL1_PIN_CONFIG GPIO_58_GPIO58

#define TTPLPFC_GPIO_TEMP_MUX_SEL2 59
#define TTPLPFC_GPIO_TEMP_MUX_SEL2_PIN_CONFIG GPIO_59_GPIO59


#define TTPLPFC_DAC_BASE DACA_BASE

//
// Datalogger enable
//
#define TTPLPFC_DATALOGGER_ENABLE 1
